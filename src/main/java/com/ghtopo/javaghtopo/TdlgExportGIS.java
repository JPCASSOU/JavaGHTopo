
package com.ghtopo.javaghtopo;

import static GHTopoOperationnel.Constantes.*;
import GHTopoOperationnel.TCallDialogs;
import static GHTopoOperationnel.TCallDialogs.*;
import GHTopoOperationnel.TConvertisseurCoordonnees;
import GHTopoOperationnel.TTableDesEntites;
import static UtilsComposants.TOperationsSurComposants.*;
import java.awt.Color;
import java.io.File;
import java.util.Enumeration;
import java.util.ResourceBundle;
import javax.swing.AbstractButton;
import javax.swing.JFileChooser;
import org.opengis.referencing.crs.CoordinateReferenceSystem;

public class TdlgExportGIS extends javax.swing.JDialog 
{
    private ResourceBundle fMyResourceBundle = null;
    private int fModalResult = mrNONE;
    private TTableDesEntites myTableEntites;
    private TConvertisseurCoordonnees myConvertisseur;
    private boolean fConvertisseurOK = false;
    private String getResourceByKey(String k)
    {
        return fMyResourceBundle.getString(k);
    }      
    
    public int getModalResult()
    {
        return fModalResult;
    }        
    public void initialiserDlg(TTableDesEntites t)
    {
        lsbSystemesCoords.setEnabled(fConvertisseurOK);
        grbxFormatsExport.setEnabled(fConvertisseurOK);
        myTableEntites = t;
        //fConvertisseurOK = false;
        if (fConvertisseurOK)
        {    
            remplirListBoxSystem(lsbSystemesCoords, myConvertisseur);            
        }
        else
        {
            rbtnGHCaveDraw.setSelected(true);            
            showMessage("Export vers GIS", "Convertisseur de coordonnées inopérant\nSeul l'export vers GHCaveDraw est possible");
        }    
    }        
    //**************************************************************************   
    public TdlgExportGIS() 
    {
        this.fMyResourceBundle = java.util.ResourceBundle.getBundle("com/ghtopo/javaghtopo/Bundle");
        myConvertisseur = new TConvertisseurCoordonnees();
        fConvertisseurOK = myConvertisseur.initialiser();
        initComponents();
        this.setLocationRelativeTo(null); // centrée
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        rbgrpFormatGIS = new javax.swing.ButtonGroup();
        btnClose = new javax.swing.JButton();
        grbxFormatsExport = new javax.swing.JPanel();
        rbtnGHCaveDraw = new javax.swing.JRadioButton();
        rbtnKML = new javax.swing.JRadioButton();
        rbtnGPX = new javax.swing.JRadioButton();
        rbtnOSM = new javax.swing.JRadioButton();
        rbtnCartoExploreur = new javax.swing.JRadioButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        lsbSystemesCoords = new javax.swing.JList();
        editFileName = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        btnChooseFile = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        chkDoDrawSilhouettes = new javax.swing.JCheckBox();
        chkUseColorGroupes = new javax.swing.JCheckBox();
        btnCouleurSilhouette = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        btnClose.setText("Fermer");
        btnClose.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCloseActionPerformed(evt);
            }
        });

        grbxFormatsExport.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        rbgrpFormatGIS.add(rbtnGHCaveDraw);
        rbtnGHCaveDraw.setText("GHCaveDraw");

        rbgrpFormatGIS.add(rbtnKML);
        rbtnKML.setText("KML Google Earth");

        rbgrpFormatGIS.add(rbtnGPX);
        rbtnGPX.setText("GPX Topografix");

        rbgrpFormatGIS.add(rbtnOSM);
        rbtnOSM.setSelected(true);
        rbtnOSM.setText("OpenStreetMap");

        rbgrpFormatGIS.add(rbtnCartoExploreur);
        rbtnCartoExploreur.setText("Carto Exploreur (France uniquement)");
        rbtnCartoExploreur.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbtnCartoExploreurActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout grbxFormatsExportLayout = new javax.swing.GroupLayout(grbxFormatsExport);
        grbxFormatsExport.setLayout(grbxFormatsExportLayout);
        grbxFormatsExportLayout.setHorizontalGroup(
            grbxFormatsExportLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(grbxFormatsExportLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(grbxFormatsExportLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(rbtnGHCaveDraw, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(rbtnKML, javax.swing.GroupLayout.DEFAULT_SIZE, 215, Short.MAX_VALUE)
                    .addGroup(grbxFormatsExportLayout.createSequentialGroup()
                        .addGroup(grbxFormatsExportLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(rbtnGPX)
                            .addComponent(rbtnCartoExploreur)
                            .addComponent(rbtnOSM))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        grbxFormatsExportLayout.setVerticalGroup(
            grbxFormatsExportLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(grbxFormatsExportLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(rbtnGHCaveDraw)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(rbtnKML)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(rbtnGPX)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(rbtnOSM)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(rbtnCartoExploreur))
        );

        lsbSystemesCoords.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        jScrollPane1.setViewportView(lsbSystemesCoords);

        editFileName.setText("jTextField1");

        jLabel1.setText("Fichier exporté");

        btnChooseFile.setText("...");
        btnChooseFile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnChooseFileActionPerformed(evt);
            }
        });

        jButton1.setText("Exporter");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        chkDoDrawSilhouettes.setSelected(true);
        chkDoDrawSilhouettes.setText("Dessin des silhouettes");

        chkUseColorGroupes.setText("Couleurs de groupe");

        btnCouleurSilhouette.setBackground(new java.awt.Color(0, 0, 255));
        btnCouleurSilhouette.setForeground(new java.awt.Color(255, 0, 51));
        btnCouleurSilhouette.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnCouleurSilhouette.setOpaque(true);
        btnCouleurSilhouette.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnCouleurSilhouetteMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(editFileName, javax.swing.GroupLayout.PREFERRED_SIZE, 392, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnChooseFile, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jButton1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnClose, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 127, Short.MAX_VALUE))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(grbxFormatsExport, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(chkUseColorGroupes, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(chkDoDrawSilhouettes, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btnCouleurSilhouette, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addContainerGap())))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(grbxFormatsExport, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(chkDoDrawSilhouettes)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(chkUseColorGroupes)
                            .addComponent(btnCouleurSilhouette, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton1))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 333, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnClose)
                    .addComponent(editFileName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnChooseFile)
                    .addComponent(jLabel1))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnCloseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCloseActionPerformed
        // TODO add your handling code here:
        fModalResult = mrCLOSE;
        this.dispose();
    }//GEN-LAST:event_btnCloseActionPerformed

    private void btnChooseFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnChooseFileActionPerformed
        // TODO add your handling code here:
        try
        {
            final JFileChooser fc = new JFileChooser(getGHTopoDirectory());
            int returnVal = fc.showOpenDialog(this);
            if (returnVal == JFileChooser.APPROVE_OPTION) 
            {
                File file = fc.getSelectedFile();
                //myFDocuTopo.loadFileXML("Toporabot.gtx");
                //myFDocuTopo.loadFileXTB(file.getName());
                //myFDocuTopo.ListerLeDocument();
                editFileName.setText(file.getAbsolutePath());
            }
        }
        catch (Exception e)
        {
            e.printStackTrace();
        }    
    }//GEN-LAST:event_btnChooseFileActionPerformed
 
    private int getOutputFormatGIS()
    {
        return getRadioButtonSelected(rbgrpFormatGIS);  
        /*
        public static final int gisGHCAVEDRAW = 0;
    public static final int gisKML = 1;
    public static final int gisGPX = 2;
    public static final int gisOSM = 3;
    public static final int gisCARTO_EXPLOREUR = 4;
    public static final int gisMEMORY_MAP = 5;
    public static final int gisAUTOCAD_2D = 6;
        //*/

    }        
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        Color c = new Color(255, 0, 0);

        CoordinateReferenceSystem EWE = myConvertisseur.getCoordSystem(lsbSystemesCoords.getSelectedIndex());
        String WU = editFileName.getText().trim();
        myTableEntites.exportForCarto(WU,
                                      myConvertisseur, 
                                      myConvertisseur.getCodeEPSG(EWE),
                                      getOutputFormatGIS(),
                                      chkDoDrawSilhouettes.isSelected(), 
                                      "", 
                                      "", 
                                      btnCouleurSilhouette.getBackground(), 
                                      chkUseColorGroupes.isSelected());
        
    }//GEN-LAST:event_jButton1ActionPerformed

    private void rbtnCartoExploreurActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbtnCartoExploreurActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_rbtnCartoExploreurActionPerformed

    private void btnCouleurSilhouetteMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnCouleurSilhouetteMouseClicked
        // TODO add your handling code here:
        Color EWE = btnCouleurSilhouette.getBackground();
        EWE = ChooseColor(this, "Couleur de silhouettes", EWE);
        btnCouleurSilhouette.setBackground(EWE);
    }//GEN-LAST:event_btnCouleurSilhouetteMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TdlgExportGIS.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TdlgExportGIS.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TdlgExportGIS.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TdlgExportGIS.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TdlgExportGIS().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnChooseFile;
    private javax.swing.JButton btnClose;
    private javax.swing.JLabel btnCouleurSilhouette;
    private javax.swing.JCheckBox chkDoDrawSilhouettes;
    private javax.swing.JCheckBox chkUseColorGroupes;
    private javax.swing.JTextField editFileName;
    private javax.swing.JPanel grbxFormatsExport;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JList lsbSystemesCoords;
    private javax.swing.ButtonGroup rbgrpFormatGIS;
    private javax.swing.JRadioButton rbtnCartoExploreur;
    private javax.swing.JRadioButton rbtnGHCaveDraw;
    private javax.swing.JRadioButton rbtnGPX;
    private javax.swing.JRadioButton rbtnKML;
    private javax.swing.JRadioButton rbtnOSM;
    // End of variables declaration//GEN-END:variables
}
